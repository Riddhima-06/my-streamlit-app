import os
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
import joblib

# 1Ô∏è‚É£ Set paths
FEATURES_CSV = "features.csv"  # CSV generated by extract_features.py
MODEL_FILE = "model.joblib"
LABEL_ENCODER_FILE = "label_encoder.joblib"

# 2Ô∏è‚É£ Load features
if not os.path.exists(FEATURES_CSV):
    raise FileNotFoundError(f"{FEATURES_CSV} not found. Run extract_features.py first.")

df = pd.read_csv(FEATURES_CSV)
print(f"‚úÖ Loaded {len(df)} samples from {FEATURES_CSV}")

# 3Ô∏è‚É£ Split features and labels
X = df.drop("label", axis=1)
y = df["label"]

# 4Ô∏è‚É£ Encode labels
le = LabelEncoder()
y_encoded = le.fit_transform(y)
print(f"‚úÖ Found genres: {list(le.classes_)}")

# 5Ô∏è‚É£ Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y_encoded, test_size=0.2, random_state=42, stratify=y_encoded
)

# 6Ô∏è‚É£ Train classifier
model = RandomForestClassifier(n_estimators=200, random_state=42)
model.fit(X_train, y_train)
print("‚úÖ Model training completed")

# 7Ô∏è‚É£ Evaluate accuracy
accuracy = model.score(X_test, y_test)
print(f"üéØ Test accuracy: {accuracy*100:.2f}%")

# 8Ô∏è‚É£ Save model and label encoder
joblib.dump(model, MODEL_FILE)
joblib.dump(le, LABEL_ENCODER_FILE)
print(f"üíæ Model saved to {MODEL_FILE}")
print(f"üíæ Label encoder saved to {LABEL_ENCODER_FILE}")
